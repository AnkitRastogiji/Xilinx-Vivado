`timescale 1ns / 1ps
// Using data flow modeling 
module Carry_Lookahead_Adder(
        input [3:0] A,B,
        input Cin,
        output [3:0] Sum,
        output Cout
        
    );
    wire P0, P1, P2, P3, G0, G1, G2, G3;
    wire C1, C2, C3, C4;
    
    //Carry Propagation signal
    assign P0 = A[0] ^ B[0];
    assign P1 = A[1] ^ B[1];
    assign P2 = A[2] ^ B[2];
    assign P3 = A[3] ^ B[3];
    
    // Carry Generate signal
    assign G0 = A[0] & B[0];
    assign G1 = A[1] & B[1];
    assign G2 = A[2] & B[2];
    assign G3 = A[3] & B[3];
    
    // Carry Signal
    assign C1 = G0 | (P0 & Cin);
    assign C2 = G1 | (P1 & C1); // C1 = G0 | (P0 & Cin)
    assign C3 = G2 | (P2 & C2); // C2 = G1 | (P1 & C1)
    assign C4 = G3 | (P3 & C3); // C3 = G2 | (P2 & C2)
    
    // Sum signal
    assign Sum[0] = P0 ^ Cin;
    assign Sum[1] = P1 ^ C1;
    assign Sum[2] = P2 ^ C2;
    assign Sum[3] = P3 ^ C3;
    
    assign Cout = C4;
endmodule
