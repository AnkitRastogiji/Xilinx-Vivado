`timescale 1ns / 1ps

module Binary_to_GrayCode_Conversion_tb();
    reg A, B, C;
    wire P, Q, R;
    
    Binary_to_GrayCode_Conversion_bh dut(.A(A), .B(B), .C(C), .P(P), .Q(Q), .R(R));
        initial 
            begin 
                A = 0; B = 0; C = 0;  #10  // delay 10 ns
                A = 0; B = 0; C = 1;  #10  // delay 10 ns
                A = 0; B = 1; C = 0;  #10  // delay 10 ns
                A = 0; B = 1; C = 1;  #10  // delay 10 ns
                A = 1; B = 0; C = 0;  #10  // delay 10 ns
                A = 1; B = 0; C = 1;  #10  // delay 10 ns
                A = 1; B = 1; C = 0;  #10  // delay 10 ns
                A = 1; B = 1; C = 1;  #10  // delay 10 ns
                $finish;
            end
endmodule
