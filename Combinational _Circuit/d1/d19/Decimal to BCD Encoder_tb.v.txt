`timescale 1ns / 1ps

module Decimal_to_BCD_Encoder_tb();
    reg I0, I1, I2, I3, I4, I5, I6, I7, I8, I9;
    wire A, B, C, D;
    
    Decimal_to_BCD_Encoder dut (
        .I0(I0), .I1(I1), .I2(I2), .I3(I3),
        .I4(I4), .I5(I5), .I6(I6), .I7(I7),
        .I8(I8), .I9(I9), 
        .D(D), .C(C), .B(B), .A(A));  
    
    initial begin
        // Initialize inputs
        I0 = 0; I1 = 0; I2 = 0; I3 = 0;
        I4 = 0; I5 = 0; I6 = 0; I7 = 0;
        I8 = 0; I9 = 0;

        // Apply test cases with delay
        I0 = 1; #10; I0 = 0;  // 0
        I1 = 1; #10; I1 = 0;  // 1
        I2 = 1; #10; I2 = 0;  // 2
        I3 = 1; #10; I3 = 0;  // 3
        I4 = 1; #10; I4 = 0;  // 4
        I5 = 1; #10; I5 = 0;  // 5
        I6 = 1; #10; I6 = 0;  // 6
        I7 = 1; #10; I7 = 0;  // 7
        I8 = 1; #10; I8 = 0;  // 8
        I9 = 1; #10; I9 = 0;  // 9

        $finish;  // End simulation
    end
    
endmodule
