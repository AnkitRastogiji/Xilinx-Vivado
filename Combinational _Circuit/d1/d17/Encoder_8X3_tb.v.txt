`timescale 1ns / 1ps

module Encoder_8X3_tb();
    reg I0, I1, I2, I3, I4, I5, I6, I7;
    wire Y0, Y1, Y2;
    
    Encoder_8X3 dut(.I0(I0), .I1(I1), .I2(I2), .I3(I3), 
                        .I4(I4), .I5(I5), .I6(I6), .I7(I7),
                        .Y0(Y0), .Y1(Y1), .Y2(Y2));
                        
            initial
                begin
                    I0 = 1; I1 = 0; I2 = 0; I3 = 0; I4 = 0; I5 = 0; I6 = 0; I7 = 0;
                    #10 // delay 10 ns
                    I0 = 0; I1 = 1; I2 = 0; I3 = 0; I4 = 0; I5 = 0; I6 = 0; I7 = 0;
                    #10 // delay 20 ns
                    I0 = 0; I1 = 0; I2 = 1; I3 = 0; I4 = 0; I5 = 0; I6 = 0; I7 = 0;
                    #10 // delay 30 ns
                    I0 = 0; I1 = 0; I2 = 0; I3 = 1; I4 = 0; I5 = 0; I6 = 0; I7 = 0;
                    #10 // delay 40 ns
                    I0 = 0; I1 = 0; I2 = 0; I3 = 0; I4 = 1; I5 = 0; I6 = 0; I7 = 0;
                    #10 // delay 50 ns
                    I0 = 0; I1 = 0; I2 = 0; I3 = 0; I4 = 0; I5 = 1; I6 = 0; I7 = 0;
                    #10 // delay 60 ns
                    I0 = 0; I1 = 0; I2 = 0; I3 = 0; I4 = 0; I5 = 0; I6 = 1; I7 = 0;
                    #10 // delay 70 ns
                    I0 = 0; I1 = 0; I2 = 0; I3 = 0; I4 = 0; I5 = 0; I6 = 0; I7 = 1;
                    #10 // delay 80 ns
                    
                    $finish;
                 end
                            
endmodule
