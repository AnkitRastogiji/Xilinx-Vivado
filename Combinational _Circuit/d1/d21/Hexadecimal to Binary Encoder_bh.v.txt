`timescale 1ns / 1ps

module Hexadecimal_to_binary_Encoder_bh(
        input [15:0] I,
        output reg[3:0] B
    );
    always @(*) 
        begin
            // test cases
            // 2nd method use if-else if- else conditionif ____ (I[15]) B = 4'b1111; ... default case 
            case(I)
                16'b0000000000000001: B = 4'B0000;
                16'b0000000000000010: B = 4'B0001;
                16'b0000000000000100: B = 4'B0010;
                16'b0000000000001000: B = 4'B0011;
                16'b0000000000010000: B = 4'B0100;
                16'b0000000000100000: B = 4'B0101;
                16'b0000000001000000: B = 4'B0110;
                16'b0000000010000000: B = 4'B0111;
                16'b0000000100000000: B = 4'B1000;
                16'b0000001000000000: B = 4'B1001;
                16'b0000010000000000: B = 4'B1010;
                16'b0000100000000000: B = 4'B1011;
                16'b0001000000000000: B = 4'B1100;
                16'b0010000000000000: B = 4'B1101;
                16'b0100000000000000: B = 4'B1110;
                16'b1000000000000000: B = 4'B1111;
            endcase
        end   
endmodule
