`timescale 1ns / 1ps

module Demux_1X8_tb();
    reg I, S0, S1, S2, E;
    wire Y0, Y1, Y2, Y3, Y4, Y5, Y6, Y7;
    
    Demux_1X8 dut(.I(I), .S0(S0), .S1(S1), .S2(S2), .E(E),
                    .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3),
                    .Y4(Y4), .Y5(Y5), .Y6(Y6), .Y7(Y7));
                    
                    initial
                    begin
                    // inputs are zero
                    I = 0; S0 = 0; S1 = 0; S2 = 0; E = 0;
                    #10
                    //test cases
                    
                    E = 1; S2 = 0; S1 = 0; S0 = 0; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 0; S1 = 0; S0 = 1; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 0; S1 = 1; S0 = 0; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 0; S1 = 1; S0 = 1; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 1; S1 = 0; S0 = 0; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 1; S1 = 0; S0 = 1; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 1; S1 = 1; S0 = 0; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 1; S1 = 1; S0 = 1; I = 1;
                    #10 // delay 10 ns
                    
                    E = 0; S2 = 1; S1 = 1; S0 = 1; I = 1;
                    #10 // delay 10 ns
                    E = 1; S2 = 0; S1 = 0; S0 = 0; I = 0;
                    #10 // delay 10 ns
                    
                    $finish;
                    end
endmodule
