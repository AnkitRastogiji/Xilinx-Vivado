`timescale 1ns / 1ps

module Decoder_3X8_tb;
    reg A, B, C;            
    wire [7:0] Y;           
   
    Decoder_3X8 dut (
        .A(A), .B(B), .C(C), .Y0(Y0), .Y1(Y1), .Y2(Y2), 
        .Y3(Y3), .Y4(Y4), .Y5(Y5), .Y6(Y6), .Y7(Y7));
    initial begin
        A = 0; B = 0; C = 0;
        #10;  // Wait for 10 ns
        A = 0; B = 0; C = 1;
        #10;  // Wait for 10 ns
        A = 0; B = 1; C = 0;
        #10;  // Wait for 10 ns
        A = 0; B = 1; C = 1;
        #10;  // Wait for 10 ns
        A = 1; B = 0; C = 0;
        #10;  // Wait for 10 ns
        A = 1; B = 0; C = 1;
        #10;  // Wait for 10 ns
        A = 1; B = 1; C = 0;
        #10;  // Wait for 10 ns
        A = 1; B = 1; C = 1;
        #10;  // Wait for 10 ns

        $finish;
    end
endmodule
