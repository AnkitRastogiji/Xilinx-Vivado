`timescale 1ns / 1ps

module Rom_Verilog_tb();
    reg clock;
    reg enable;
    reg [3:0] addr;
    wire [3:0] data;
    
    ROM_Verilog uut(.clock(clock), .enable(enable), .addr(addr), .data(data));
    // uut(unit under test)
    initial
    begin
      $dumpfile("dump.vcd");
      $dumpvars(1, Rom_Verilog_tb);       
      
      clock=1'b1;
      forever #5 clock = ~clock;
    end
        initial
    begin
      enable = 1'b0; // we aren't able to read the data
      #10;                  
      enable = 1'b1; // read the data  
      addr = 4'b1010;
      #10;
      addr = 4'b0110;
      #10;
      addr = 4'b0011;
      #10;
      enable = 1'b0;
      addr = 4'b1111;
      #10;
      enable = 1'b1;
      addr = 4'b1000;
      #10;
      addr = 4'b0000;
      #10;
      addr = 4'bxxxx;
      #10;
    end
            initial
                begin
                    #80 $finish;
            end                     
endmodule
