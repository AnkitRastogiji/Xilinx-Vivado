`timescale 1ns / 1ps
// Using behavioral modeling
module ROM_Verilog(
    input clock,
    input enable,
    input [3:0] addr,
    output reg [3:0] data 
    );
    reg [3:0] memory [15:0]; // 4-bit data and 16 location
    always @(posedge clock)
        begin
            if(enable) // if enable is 1 we able to read data and transfer the data addr
                // using non blocking assignment
                data <= memory[addr];
            else
                // 4 times x known value
                data <= 4'bxxxx;
         end
         initial
            begin
                memory[0] = 4'b0000;
                memory[1] = 4'b0001;
                memory[2] = 4'b0010;
                memory[3] = 4'b0011;
                memory[4] = 4'b0100;
                memory[5] = 4'b0101;
                memory[6] = 4'b0110;
                memory[7] = 4'b0111;
                memory[8] = 4'b1000;
                memory[9] = 4'b1001;
                memory[10] = 4'b1010;
                memory[11] = 4'b1011;
                memory[12] = 4'b1100;
                memory[13] = 4'b1101;
                memory[14] = 4'b1110;
                memory[15] = 4'b1111;
            end
endmodule
