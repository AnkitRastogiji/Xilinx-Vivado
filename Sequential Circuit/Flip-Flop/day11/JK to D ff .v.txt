`timescale 1ns / 1ps
// Using behavioral modeling  
module JK_to_D_FF(
    input D, clock, reset,
    output Q
    );
    wire J, K;
    assign J = D;
    assign K = ~D;
    JK_FF JK_FF1(.J(J),
                 .K(K),
                 .clock(clock),
                 .reset(reset),
                 .Q(Q)
                 );
endmodule
// JK ff module
module JK_FF(
    input J, K, clock, reset,
    output reg Q
    );
    always @(posedge clock or posedge reset) begin
        if(reset) begin
            Q <= 0;  // Reset flip-flop
        end
        else begin
            case({J, K})
                2'b00: Q <= Q; // no change
                2'b01: Q <= 0; // reset
                2'b10: Q <= 1; // set
                2'b11: Q <= ~Q; // toggle
            endcase
        end
     end
endmodule
